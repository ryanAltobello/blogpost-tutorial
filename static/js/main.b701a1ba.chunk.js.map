{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","console","log","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b701a1ba.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\"\r\n});\r\n","import jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\nimport _ from \"lodash\";\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n\r\n  // ---------- GETTING UNIQUE IDS OF ALL USERS ----------\r\n\r\n  // const userIds = _.uniq(_.map(getState().posts, \"userId\"));\r\n  // userIds.forEach(id => dispatch(fetchUser(id)));\r\n\r\n  // Alternate way to approach\r\n  _.chain(getState().posts)\r\n    .map(\"userId\")\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await jsonPlaceholder.get(\"/posts\");\r\n\r\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.user.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPostsAndUsers } from \"../actions\";\r\nimport UserHeader from \"./UserHeader\";\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.map(post => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\" />\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.posts);\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPostsAndUsers }\r\n)(PostList);\r\n","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  user: usersReducer\r\n});\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_USER\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}